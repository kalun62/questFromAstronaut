'use strict'

const sendBtn = document.getElementById('send'),
    form = document.getElementById('test'),
    camp = document.getElementById('camp'),
    quest = document.getElementById('quest'),
    response = document.getElementById('response'),
    timer = document.querySelector('.timer'),
    successWindow = document.createElement('div')

let time
let isFormEnabled = true // –∑–Ω–∞—á–µ–Ω–∏–µ –±—É–¥–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–æ –ø–æ—Å–ª–µ –∑–∞–ø—Ä–æ—Å–∞

let previousStatus = null

function checkFormStatus() {
    const statusUrl = 'https://script.google.com/macros/s/AKfycbxCc2-2U7T6PpB7QJXu5W8Sg_Ptp7wy34MBKs6qgHOkgBCksn0y94m-iJ9nP_9LnQj3/exec' // üîÅ –í—Å—Ç–∞–≤—å –°–í–û–ô URL

    fetch(statusUrl)
        .then(res => res.json())
        .then(data => {
            const newStatus = data.formEnabled === true || data.formEnabled === 'TRUE'

            if (newStatus !== previousStatus) {
                isFormEnabled = newStatus
                previousStatus = newStatus

                if (!isFormEnabled) {
                    sendBtn.setAttribute('disabled', 'disabled')
                    sendBtn.classList.add('disabled')
                    sendBtn.textContent = '–ñ–¥—ë–º...'
                } else {
                    enableBtnIfAllowed()
                }
            }
        })
        .catch(err => {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ —Ñ–æ—Ä–º—ã:', err)
        })
}

setInterval(checkFormStatus, 2000)

function startTimer() {
    let sec = 30
    clearInterval(time)
    time = setInterval(() => {
        if (sec > 0) {
            timer.style.color = 'black'
            timer.innerHTML = `–û—Å—Ç–∞–ª–æ—Å—å <br> ${--sec} —Å–µ–∫—É–Ω–¥`
        } else {
            timer.innerHTML = `–í—Ä–µ–º—è<br> –≤—ã—à–ª–æ`
            timer.style.color = '#db0000'
            clearInterval(time)
        }
    }, 1000)
}

function questionTime() {
    successWindow.classList.add('active')
    successWindow.innerHTML = `<p>–í–∞—à –æ—Ç–≤–µ—Ç –ø—Ä–∏–Ω—è—Ç<br>
                                –û–∂–∏–¥–∞–π—Ç–µ —Å–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å</p>
                           <div id="next_quest">–î–∞–ª—å—à–µ</div>
                           <span>–ù–µ –Ω–∞–∂–∏–º–∞–π—Ç–µ –∫–Ω–æ–ø–∫—É, –ø–æ–∫–∞ –Ω–µ —É—Å–ª—ã—à–∏—Ç–µ –≤–æ–ø—Ä–æ—Å</span>`

    const nextQuestBtn = successWindow.querySelector('#next_quest')
    nextQuestBtn.addEventListener('click', (e) => {
        e.preventDefault()
        successWindow.classList.remove('active')
        startTimer()
    })
}

function disabledBtn() {
    sendBtn.setAttribute('disabled', 'disabled')
    sendBtn.classList.add('disabled')
    sendBtn.textContent = isFormEnabled ? '–û—Ç–≤–µ—Ç–∏—Ç—å' : '–ñ–¥—ë–º'
}

function enableBtnIfAllowed() {
    if (response.value !== '' && camp.value !== 'default' && isFormEnabled) {
        sendBtn.removeAttribute('disabled')
        sendBtn.classList.remove('disabled')
        sendBtn.textContent = '–û—Ç–≤–µ—Ç–∏—Ç—å'
    } else {
        disabledBtn()
    }
}

function sendForm() {
    const appLink = 'https://script.google.com/macros/s/AKfycbxCc2-2U7T6PpB7QJXu5W8Sg_Ptp7wy34MBKs6qgHOkgBCksn0y94m-iJ9nP_9LnQj3/exec'
    const formData = new FormData(form)

    $.ajax({
        url: appLink,
        type: "POST",
        data: formData,
        processData: false,
        contentType: false,
    })
}

// --- –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–¥ ---
const urlParams = new URLSearchParams(window.location.search)
let i = parseInt(urlParams.get('question')) || 1
const campFromUrl = urlParams.get('camp')

// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–º–µ—Ä –≤–æ–ø—Ä–æ—Å–∞
quest.textContent = `–í–æ–ø—Ä–æ—Å ‚Ññ ${i}`
response.setAttribute('name', `–í–æ–ø—Ä–æ—Å_${i}`)

// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ª–∞–≥–µ—Ä—å, –µ—Å–ª–∏ –µ—Å—Ç—å –≤ URL
camp.value = campFromUrl || ''
camp.removeAttribute('disabled')

// –°–æ–∑–¥–∞–µ–º –∏ –¥–æ–±–∞–≤–ª—è–µ–º –æ–∫–Ω–æ-–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é
successWindow.classList.add('success_window')
form.append(successWindow)

if (!urlParams.get('question')) {
    successWindow.classList.add('active')
    successWindow.innerHTML = `<p>–î–æ–±—Ä—ã–π –¥–µ–Ω—å!<br>
                                –í–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –≤—ã—Å–ª—É—à–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å, <br>
                                –∑–∞—Ç–µ–º –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–û—Ç–≤–µ—Ç–∏—Ç—å"<br>
                                –ù–∞ –æ—Ç–≤–µ—Ç —É –≤–∞—Å –±—É–¥–µ—Ç 30 —Å–µ–∫—É–Ω–¥ </p>
                              <div id="next_quest">–û—Ç–≤–µ—Ç–∏—Ç—å</div>
                              <span>–ù–µ –Ω–∞–∂–∏–º–∞–π—Ç–µ –∫–Ω–æ–ø–∫—É, –ø–æ–∫–∞ –Ω–µ —É—Å–ª—ã—à–∏—Ç–µ –≤–æ–ø—Ä–æ—Å</span>`

    const nextQuestBtn = successWindow.querySelector('#next_quest')
    nextQuestBtn.addEventListener('click', () => {
        successWindow.classList.remove('active')
        startTimer()

        const newParams = new URLSearchParams()
        newParams.set('question', 1)
        if (camp.value !== 'default') newParams.set('camp', camp.value)
        const newUrl = `${window.location.pathname}?${newParams}`
        window.history.replaceState(null, '', newUrl)
    })
} else {
    startTimer()
}

camp.addEventListener('change', () => {
    const currentParams = new URLSearchParams(window.location.search)
    currentParams.set('camp', camp.value)
    window.history.replaceState(null, '', `${window.location.pathname}?${currentParams}`)

    startTimer()
    enableBtnIfAllowed()
})

sendBtn.addEventListener('click', (e) => {
    e.preventDefault()
    if (!isFormEnabled) return

    sendForm()

    i++
    quest.textContent = `–í–æ–ø—Ä–æ—Å ‚Ññ ${i}`
    response.setAttribute('name', `–í–æ–ø—Ä–æ—Å_${i}`)
    camp.removeAttribute('disabled')
    response.value = ''
    disabledBtn()

    questionTime()
    timer.textContent = ''
    clearInterval(time)

    const currentParams = new URLSearchParams()
    currentParams.set('question', i)
    if (camp.value !== 'default') currentParams.set('camp', camp.value)
    const newUrl = `${window.location.pathname}?${currentParams}`
    window.history.replaceState(null, '', newUrl)
})

response.addEventListener('input', enableBtnIfAllowed)

form.addEventListener('submit', (e) => {
    e.preventDefault()
    if (!isFormEnabled) return
    sendForm()
})

disabledBtn()
checkFormStatus()